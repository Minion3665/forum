{"version":3,"sources":["utils/colors.js","utils/conn.js","boards/displayBoards.js","utils/userinput.js","posts/post.js","posts/boards.js","index.js"],"names":["hexToHSL","hex","result","exec","r","parseInt","g","b","h","s","max","Math","min","l","d","HSL","Object","cookie","Cookies","axiosGitHubGraphQL","axios","create","baseURL","headers","Authorization","get","GET_LABELS","GET_POSTS","refreshToken","set","path","maxAge","getLabels","post","query","then","response","labels","data","repository","edges","forEach","label","push","node","baseBadgeStyle","color","backgroundColor","border","borderColor","display","borderRadius","padding","baseBoardStyle","paddingBottom","marginTop","marginBottom","position","width","height","textDecoration","borderBottom","top","left","transform","containerStyle","transition","Board","props","name","badgeStyle","bgColor","console","log","boardName","replace","Fragment","to","encodeURI","style","description","DisplayBoards","state","boards","boardNames","startsWith","slice","includes","setState","catch","error","alert","window","location","href","this","getBoards","keys","map","id","board","textAlign","Component","baseInputContainerStyle","boxSizing","baseTextAreaStyle","resize","uppercaseFirstLetter","str","charAt","toUpperCase","UserInput","bodyValue","type","verb","handleBodyChange","bind","handleSubmit","event","target","value","onsubmit","toLowerCase","onChange","onClick","basePostStyle","borderLeft","baseTitleStyle","fontSize","verticalAlign","baseUserdataStyle","baseBodyStyle","baseCommentStyle","basePFPImageStyle","marginRight","baseFooterStyle","paddingLeft","paddingRight","paddingTop","Post","comments","comment","unshift","timestamp","createdAt","author","login","author_pfp","avatarUrl","content","bodyHTML","commentsSuffix","tagsSuffix","length","tags","src","title","Date","toLocaleString","dangerouslySetInnerHTML","__html","body","Comment","BoardPosts","status","posts","repoid","match","params","res","currentBoardLabel","issues","issue","labelNodes","locked","issueLabelNames","getPostsInBoard","mutation","postPost","setTimeout","getPosts","App","exact","render","component","Authentication","ghCode","querySearch","search","code","client_id","client_secret","token","access_token","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.68445630.chunk.js","sourcesContent":["function hexToHSL(hex) {\n\tlet result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n\tlet r = parseInt(result[1], 16);\n\tlet g = parseInt(result[2], 16);\n\tlet b = parseInt(result[3], 16);\n\tr /= 255;\n\tg /= 255;\n\tb /= 255;\n\tlet max = Math.max(r, g, b), min = Math.min(r, g, b);\n\tlet h, s, l = (max + min) / 2;\n\tif(max === min) {\n\t\th = s = 0;\n\t} else {\n\t\tlet d = max - min;\n\t\ts = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n\t\tswitch(max){\n\t\t\tcase r: h = (g - b) / d + (g < b ? 6 : 0); break;\n\t\t\tcase g: h = (b - r) / d + 2; break;\n\t\t\tcase b: h = (r - g) / d + 4; break;\n\t\t}\n\t\th /= 6;\n\t}\n\tlet HSL = new Object();\n\tHSL['h']=h;\n\tHSL['s']=s;\n\tHSL['l']=l;\n\treturn HSL;\n}\n\n// Function from https://gist.github.com/xenozauros/f6e185c8de2a04cdfecf\n// Modified for react by Minion3665\n\nexport default hexToHSL;\n","import axios from 'axios';\nimport Cookies from 'universal-cookie';\n\nconst cookie = new Cookies();\n\nconst axiosGitHubGraphQL = axios.create({\n  baseURL: 'https://api.github.com/graphql',\n  headers: {\n    Authorization: 'bearer '+cookie.get(\"gh-token\"),\n  },\n});\n\nconst owner = \"minion3665\"\nconst repo = \"forum\"\n\nconst GET_LABELS = `{\n\trepository(owner:${owner}, name:${repo}) {\n\t\tlabels(first:100) {\n\t\t\tedges {\n\t\t\t\tnode {\n\t\t\t\t\tname,\n\t\t\t\t\tdescription,\n\t\t\t\t\tcolor\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}`;\n\nconst GET_POSTS = `{\n\trepository(owner:${owner}, name:${repo}) {\n\t\tid,\n\t\tissues(last:100) {\n\t\t\tedges {\n\t\t\t\tnode {\n\t\t\t\t\tcomments(last:100) {\n\t\t\t\t\t\tedges {\n\t\t\t\t\t\t\tnode {\n\t\t\t\t\t\t\t\tauthor {\n\t\t\t\t\t\t\t\t\tlogin,\n\t\t\t\t\t\t\t\t\tavatarUrl\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tbodyHTML,\n\t\t\t\t\t\t\t\tcreatedAt,\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tlabels(first:100) {\n\t\t\t\t\t\tedges {\n\t\t\t\t\t\t\tnode {\n\t\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t\t\tcolor\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tauthor {\n\t\t\t\t\t\tlogin,\n\t\t\t\t\t\tavatarUrl\n\t\t\t\t\t},\n\t\t\t\t\ttitle,\n\t\t\t\t\tbodyHTML,\n\t\t\t\t\tcreatedAt,\n\t\t\t\t\tlocked\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}`;\n\nfunction setToken(token) {\n  cookie.set(\"gh-token\", token, { path: \"/\", maxAge: 604800000 });\n}\n\nfunction refreshToken() {\n  cookie.set(\"gh-token\", cookie.get(\"gh-token\"), { path: \"/\", maxAge: 604800000 });\n}\n\nfunction logout() {\n  cookie.remove(\"gh-token\")\n}\n\nfunction getLabels() { // Get all labels in the forum\n\trefreshToken()\n\treturn axiosGitHubGraphQL\n\t.post('', { query: GET_LABELS })\n\t.then((response) => {\n\t\tlet labels = [];\n\t\tresponse.data.data.repository.labels.edges.forEach((label) => {\n\t\t\tlabels.push(label.node);\n\t\t});\n\t\treturn labels;\n\t});\n}\n\nfunction getPosts() {\n\trefreshToken()\n\treturn axiosGitHubGraphQL\n\t.post('', { query: GET_POSTS })\n}\n\nfunction postPost(title, body, repoid) {\n\trefreshToken()\n\tlet mutation = `\n\tmutation {\n\t\tcreateIssue (\n\t\t\tinput:{\n\t\t\t\ttitle: \"`+title+`\",\n\t\t\t\tbody: \"`+body+`\",\n\t\t\t\trepositoryId: \"`+repoid+`\",\n\t\t\t}\n\t\t){\n\t\t\tclientMutationId\n\t\t}\n\t}`\n\tconsole.log(mutation);\n\treturn axiosGitHubGraphQL\n\t.post('', { query: mutation })\n}\n\nexport { getLabels, getPosts, setToken, refreshToken, postPost };\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Link, Switch } from \"react-router-dom\";\nimport hexToHSL from \"./../utils/colors.js\";\nimport { getLabels } from \"./../utils/conn.js\";\n\nlet baseBadgeStyle = {\n\tcolor: \"#ffffff\",\n\tbackgroundColor: \"#000000\",\n\tborder: \"1px solid\",\n\tborderColor: \"#ffffff\",\n\tdisplay: \"inlineBlock\",\n\tborderRadius: \"0.75vw\",\n\tpadding: \"0.25vw\",\n\tdisplay: \"inline-block\",\n\twidth: \"auto\",\n\theight: \"auto\",\n};\n\nlet baseBoardStyle = {\n\tpaddingBottom: \"0.5vw\",\n\tmarginTop: \"0.5vw\",\n\tmarginBottom: \"0.5vw\",\n\tdisplay: \"block\",\n\tposition: \"relative\",\n\twidth: \"90%\",\n\theight: \"auto\",\n\ttextDecoration: \"none\",\n\tcolor: \"#000000\",\n\tborderBottom: \"1px solid #000000\",\n\ttop: \"0\",\n\tleft: \"50%\",\n\ttransform: \"translate(-50%, 0)\",\n};\n\nlet containerStyle = {\n\tposition: \"relative\",\n\tborder: \"3px solid #000000\",\n\tborderRadius: \"1vw\",\n\twidth: \"90%\",\n\theight: \"auto\",\n\ttop: \"0\",\n\tleft: \"50%\",\n\ttransform: \"translate(-50%, 0)\",\n\ttransition: \"all 2s\",\n}\n\nfunction Board (props) {\n\tif (!props.name) {\n\t\treturn null;\n\t}\n\tlet badgeStyle = baseBadgeStyle;\n\tlet bgColor = props.bgColor;\n\tif (typeof bgColor != \"string\") {\n\t\tbgColor = badgeStyle.backgroundColor;\n\t}\n\tbadgeStyle.backgroundColor = bgColor;\n\tif (hexToHSL(bgColor).l >= 0.5) {\n\t\tbadgeStyle.color = \"#000000\";\n\t\tbadgeStyle.borderColor = \"#000000\";\n\t} else {\n\t\tbadgeStyle.color = \"#ffffff\";\n\t\tbadgeStyle.borderColor = \"#aaaaaa\";\n\t}\n\tconsole.log(hexToHSL(bgColor).l);\n\tlet boardName = props.name.replace(\" \", \"-\");\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<Link to={\"/board/\"+encodeURI(boardName)} style={baseBoardStyle}>\n\t\t\t\t<b style={badgeStyle}>#{boardName}</b>&nbsp;\n\t\t\t\t<span>- {props.description}</span>\n\t\t\t</Link>\n\t\t</React.Fragment>\n\t);\n}\n\nclass DisplayBoards extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tboards: null\n\t\t}\n\t}\n\tgetBoards() {\n\t\tlet boards = [];\n\t\tlet boardNames = [];\n\t\tgetLabels().then((labels) => {\n\t\t\tconsole.log(labels);\n\t\t\tlabels.forEach((label) => {\n\t\t\t\tif (label.name.startsWith(\"Board:\")) {\n\t\t\t\t\tlabel.name = label.name.slice(6);\n\t\t\t\t\tconsole.log(encodeURI(label.name.replace(\" \", \"-\")))\n\t\t\t\t\tconsole.log(boardNames)\n\t\t\t\t\tif (label.name && !boardNames.includes(encodeURI(label.name.replace(\" \", \"-\")))) {\n\t\t\t\t\t\tboards.push(label);\n\t\t\t\t\t\tboardNames.push(encodeURI(label.name.replace(\" \", \"-\")));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t\tthis.setState({boards: boards});\n\t\t}).catch((error) => {\n\t\t\talert(error);\n\t\t\twindow.location.href = \"https://github.com/login/oauth/authorize?client_id=9e99d8b63b9a74c6c3a4&scope=repo,user\";\n\t\t});\n\t}\n\tcomponentDidMount() {\n\t\tthis.getBoards();\n\t}\n\trender() {\n\t\tlet boards = this.state.boards;\n\t\tif (!boards) {\n\t\t\treturn (\n\t\t\t\t<React.Fragment>\n\t\t\t\t\t<div style={containerStyle}>\n\t\t\t\t\t\t<h2 style={{textAlign: \"center\"}}>Getting the latest data...</h2>\n\t\t\t\t\t</div>\n\t\t\t\t</React.Fragment>\n\t\t\t);\n\t\t}\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<div style={containerStyle}>\n\t\t\t\t\t{\n\t\t\t\t\t\tObject.keys(boards).map((id) => {\n\t\t\t\t\t\t\tlet board = boards[id];\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<Board name={board.name} description={board.description} bgColor={\"#\"+board.color} />\n\t\t\t\t\t\t\t); // Create an instance of Board for each board in the forum\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nexport default DisplayBoards;\nexport { Board };\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Link, Switch } from \"react-router-dom\";\nimport hexToHSL from \"./../utils/colors.js\";\nimport { getLabels } from \"./../utils/conn.js\";\n\nlet baseInputContainerStyle = {\n\tposition: \"relative\",\n\tboxSizing: \"borderBox\",\n\twidth: \"85%\",\n\theight: \"auto\",\n\ttop: \"0\",\n\tleft: \"50%\",\n\ttransform: \"translate(-50%, 0)\",\n\tmarginBottom: \"2vw\",\n\tbackgroundColor: \"#bababa\",\n\tpadding: \"2vw\",\n};\nlet baseTextAreaStyle = {\n\tresize: \"none\",\n\twidth: \"100%\",\n};\n\nfunction uppercaseFirstLetter(str) {\n\treturn str.charAt(0).toUpperCase() + str.slice(1);\n}\n\nclass UserInput extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tbodyValue: \"\",\n\t\t\ttype: (props.type) ? props.type : \"post\",\n\t\t\tverb: (props.type != \"comment\") ? \"to\" : \"on\",\n\t\t\tto: (props.to) ? props.to : \"this\",\n\t\t\twidth: (props.type != \"comment\") ? \"85vw\" : \"75vw\",\n\t\t\ttransform: (props.type != \"comment\") ? \"translate(-50%, 0)\" : \"translate(-45%, 0)\",\n\t\t}\n\t\tthis.handleBodyChange = this.handleBodyChange.bind(this);\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n\t}\n\thandleBodyChange(event) {\n\t\tthis.setState({bodyValue: event.target.value});\n\t}\n\thandleSubmit() {\n\t\tthis.setState({bodyValue: \"\"});\n\t\tthis.props.onsubmit(\"A \"+this.state.type, this.state.bodyValue);\n\t\tconsole.log(\"A \"+this.state.type)\n\t\tconsole.log(this.state.bodyValue)\n\t}\n\trender() {\n\t\tbaseInputContainerStyle.width = this.state.width;\n\t\tbaseInputContainerStyle.transform = this.state.transform;\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<div style={baseInputContainerStyle}>\n\t\t\t\t\t<form>\n\t\t\t\t\t\t<span>{uppercaseFirstLetter(this.state.type)} {this.state.verb} #{this.state.to.toLowerCase()}</span>\n\t\t\t\t\t\t<textarea value={this.state.bodyValue} onChange={this.handleBodyChange} style={baseTextAreaStyle}/>\n\t\t\t\t\t\t<button type=\"button\" onClick={() => {this.setState({bodyValue: \"\"})}}>Clear</button>{\" \"}\n\t\t\t\t\t\t<button type=\"button\" onClick={this.handleSubmit}>{uppercaseFirstLetter(this.state.type)}!</button>\n\t\t\t\t\t</form>\n\t\t\t\t</div>\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nexport default UserInput;\n","import React, { Component } from \"react\";\nimport UserInput from \"./../utils/userinput.js\";\n\nlet basePostStyle = {\n\tposition: \"relative\",\n\tborderLeft: \"2vw solid #000000\",\n\tboxSizing: \"borderBox\",\n\twidth: \"85%\",\n\theight: \"auto\",\n\ttop: \"0\",\n\tleft: \"50%\",\n\ttransform: \"translate(-50%, 0)\",\n\tmarginBottom: \"2vw\",\n\tbackgroundColor: \"#bababa\",\n\tpadding: \"2vw\",\n};\nlet baseTitleStyle = {\n\tfontSize: \"3vw\",\n\tcolor: \"#000000\",\n\tverticalAlign: \"top\",\n}\nlet baseUserdataStyle = {\n\tfontSize: \"2vw\",\n\tcolor: \"#000000\",\n\tverticalAlign: \"top\",\n}\nlet baseBodyStyle = {\n\tfontSize: \"2vw\",\n\tcolor: \"#555555\",\n}\nlet baseCommentStyle = {\n\tposition: \"relative\",\n\tborderLeft: \"2vw solid #000000\",\n\tboxSizing: \"borderBox\",\n\twidth: \"75%\",\n\theight: \"auto\",\n\ttop: \"0\",\n\tleft: \"50%\",\n\ttransform: \"translate(-45%, 0)\",\n\tmarginBottom: \"2vw\",\n\tbackgroundColor: \"#bababa\",\n\tpadding: \"2vw\",\n}\nlet basePFPImageStyle = {\n\twidth: \"3vw\",\n\tborderRadius: \"3vw\",\n\tdisplay: \"inline-block\",\n\tmarginRight: \"1vw\",\n\tverticalAlign: \"baseline\",\n}\nlet baseFooterStyle = {\n\tcolor: \"#777777\",\n\tfontSize: \"1.25vw\",\n\tpaddingLeft: \"1vw\",\n\tpaddingRight: \"1vw\",\n\tpaddingTop: \"1vw\",\n\tdisplay: \"inline-block\",\n}\n\nclass Post extends Component {\n\tconstructor(props) {\n  \t\tsuper(props);\n\t}\n\trender() {\n\t\tlet comments = []\n\t\tthis.props.comments.forEach((comment) => {\n\t\t\tcomments.unshift({\n\t\t\t\ttimestamp: comment.node.createdAt,\n\t\t\t\tauthor: comment.node.author.login,\n\t\t\t\tauthor_pfp: comment.node.author.avatarUrl,\n\t\t\t\tcontent: comment.node.bodyHTML,\n\t\t\t});\n\t\t});\n\t\tlet commentsSuffix = \"\";\n\t\tlet tagsSuffix = \"\";\n\t\tif (this.props.comments.length != 1) {\n\t\t\tcommentsSuffix = \"s\";\n\t\t}\n\t\tif (this.props.tags.length != 1) {\n\t\t\ttagsSuffix = \"s\";\n\t\t}\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<div style={basePostStyle}>\n\t\t\t\t<img style={basePFPImageStyle} src={this.props.author_pfp}/>\n\t\t\t\t<span style={baseTitleStyle}>{this.props.title}</span>{\" \"}\n\t\t\t\t<span style={baseUserdataStyle}>by {this.props.author} at {new Date(this.props.timestamp).toLocaleString()}</span><br/>\n\t\t\t\t<span style={baseBodyStyle} dangerouslySetInnerHTML={{__html: this.props.body}}/><br/>\n\t\t\t\t<span style={baseFooterStyle}>{this.props.comments.length} comment{commentsSuffix}\n\t\t\t\t{\" \"}- {this.props.tags.length} tag{tagsSuffix}\n\t\t\t\t</span></div>\n\t\t\t\t{\n\t\t\t\t\tObject.keys(comments).map((id) => {\n\t\t\t\t\t\tlet comment = comments[id];\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<Comment\n\t\t\t\t\t\t\t\tauthor={comment.author}\n\t\t\t\t\t\t\t\tauthor_pfp={comment.author_pfp}\n\t\t\t\t\t\t\t\tbody={comment.content}\n\t\t\t\t\t\t\t\ttimestamp={comment.timestamp}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t);\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nclass Comment extends Component {\n\tconstructor(props) {\n  \t\tsuper(props);\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<div style={baseCommentStyle}>\n\t\t\t<img style={basePFPImageStyle} src={this.props.author_pfp}/>\n\t\t\t<span style={baseUserdataStyle}>{this.props.author} at {new Date(this.props.timestamp).toLocaleString()}</span><br/>\n\t\t\t<span style={baseBodyStyle} dangerouslySetInnerHTML={{__html: this.props.body}}/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Post;\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Link, Switch } from \"react-router-dom\";\nimport hexToHSL from \"./../utils/colors.js\";\nimport UserInput from \"./../utils/userinput.js\";\nimport { getLabels, getPosts, postPost } from \"./../utils/conn.js\";\nimport Post from \"./post.js\";\n\nlet base404Style = {\n\tposition: \"relative\",\n\tborder: \"3px solid #000000\",\n\tborderRadius: \"1vw\",\n\twidth: \"90%\",\n\theight: \"auto\",\n\ttop: \"0\",\n\tleft: \"50%\",\n\ttransform: \"translate(-50%, 0)\",\n\ttextAlign: \"center\",\n\tmarginBottom: \"2vw\",\n};\nlet base404ImageStyle = {\n\twidth: \"50%\",\n\theight: \"auto\",\n}\n\nclass BoardPosts extends Component {\n\tconstructor(props) {\n  \t\tsuper(props);\n\t\tthis.state = {board: null, status: null, posts: [], repoid: null};\n\t}\n\tgetPostsInBoard() {\n\t\tif (this.state.board != this.props.match.params.board) {\n\t\t\tthis.setState({status: null, board: this.props.match.params.board});\n\t\t}\n\t\tgetPosts().then((res) => {\n\t\t\tgetLabels().then((labels) => {\n\t\t\t\tconsole.log(this.props.match.params.board);\n\t\t\t\tlet posts = [];\n\t\t\t\tlet currentBoardLabel = null;\n\t\t\t\tfor (const label of labels) {\n\t\t\t\t\tconsole.log(encodeURI(label.name.replace(\" \", \"-\")));\n\t\t\t\t\tif (encodeURI(label.name.replace(\" \", \"-\")) == \"Board:\"+this.props.match.params.board) {\n\t\t\t\t\t\tcurrentBoardLabel = label;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tconsole.log(this.props.match.params.board);\n\t\t\t\tconsole.log(currentBoardLabel);\n\t\t\t\tif (this.props.match.params.board == \"all\" || this.props.match.params.board == \"off-topic\") {\n\t\t\t\t\tcurrentBoardLabel = \"special\";\n\t\t\t\t}\n\t\t\t\tconsole.log(currentBoardLabel);\n\t\t\t\tif (currentBoardLabel == null && !(this.props.match.params.board in [\"all\", \"off-topic\"])) {\n\t\t\t\t\tthis.setState({status: false});\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tres.data.data.repository.issues.edges.forEach((issue) => {\n\t\t\t\t\tconsole.log(issue);\n\t\t\t\t\tconsole.log(this.props.match.params.board);\n\t\t\t\t\tlet labelNodes = []\n\t\t\t\t\tissue.node.labels.edges.forEach((label) => {\n\t\t\t\t\t\tlabelNodes.push(label.node);\n\t\t\t\t\t});\n\t\t\t\t\tif (this.props.match.params.board == \"all\") {\n\t\t\t\t\t\tposts.unshift({\n\t\t\t\t\t\t\ttitle: issue.node.title,\n\t\t\t\t\t\t\tcontent: issue.node.bodyHTML,\n\t\t\t\t\t\t\tlocked: issue.node.locked,\n\t\t\t\t\t\t\ttimestamp: issue.node.createdAt,\n\t\t\t\t\t\t\tcomments: issue.node.comments.edges,\n\t\t\t\t\t\t\ttags: labelNodes,\n\t\t\t\t\t\t\tauthor: issue.node.author.login,\n\t\t\t\t\t\t\tauthor_pfp: issue.node.author.avatarUrl,\n\t\t\t\t\t\t});\n\t\t\t\t\t} else if (this.props.match.params.board == \"off-topic\") {\n\t\t\t\t\t\tlet issueLabelNames = []\n\t\t\t\t\t\tlabelNodes.forEach((label) => {\n\t\t\t\t\t\t\tissueLabelNames.push(label.name);\n\t\t\t\t\t\t});\n\t\t\t\t\t\tif (issueLabelNames.includes(\"Moderation:OffTopic\")) {\n\t\t\t\t\t\t\tposts.unshift({\n\t\t\t\t\t\t\t\ttitle: issue.node.title,\n\t\t\t\t\t\t\t\tcontent: issue.node.bodyHTML,\n\t\t\t\t\t\t\t\tlocked: issue.node.locked,\n\t\t\t\t\t\t\t\ttimestamp: issue.node.createdAt,\n\t\t\t\t\t\t\t\tcomments: issue.node.comments.edges,\n\t\t\t\t\t\t\t\ttags: labelNodes,\n\t\t\t\t\t\t\t\tauthor: issue.node.author.login,\n\t\t\t\t\t\t\t\tauthor_pfp: issue.node.author.avatarUrl,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (issue.node.title.startsWith(\"Board:\"+this.props.match.params.board+\" \")) {\n\t\t\t\t\t\tposts.unshift({\n\t\t\t\t\t\t\ttitle: issue.node.title.slice((\"Board:\"+this.props.match.params.board+\" \").length),\n\t\t\t\t\t\t\tcontent: issue.node.bodyHTML,\n\t\t\t\t\t\t\tlocked: issue.node.locked,\n\t\t\t\t\t\t\ttimestamp: issue.node.createdAt,\n\t\t\t\t\t\t\tcomments: issue.node.comments.edges,\n\t\t\t\t\t\t\ttags: labelNodes,\n\t\t\t\t\t\t\tauthor: issue.node.author.login,\n\t\t\t\t\t\t\tauthor_pfp: issue.node.author.avatarUrl,\n\t\t\t\t\t\t});\n\t\t\t\t\t} else if (currentBoardLabel in labelNodes) {\n\t\t\t\t\t\tposts.unshift({\n\t\t\t\t\t\t\ttitle: issue.node.title,\n\t\t\t\t\t\t\tcontent: issue.node.bodyHTML,\n\t\t\t\t\t\t\tlocked: issue.node.locked,\n\t\t\t\t\t\t\ttimestamp: issue.node.createdAt,\n\t\t\t\t\t\t\tcomments: issue.node.comments.edges,\n\t\t\t\t\t\t\ttags: labelNodes,\n\t\t\t\t\t\t\tauthor: issue.node.author.login,\n\t\t\t\t\t\t\tauthor_pfp: issue.node.author.avatarUrl,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tthis.setState({posts: posts, status: true, repoid: res.data.data.repository.id});\n\t\t\t});\n\t\t});\n\t}\n\tcomponentDidMount() {\n\t\tthis.getPostsInBoard();\n\t}\n\trender() {\n\t\tif (this.state.board != this.props.match.params.board) {\n\t\t\tthis.getPostsInBoard();\n\t\t}\n\t\tlet board = this.props.match.params.board;\n\t\tlet boardLabel = null;\n\t\t//let labels = getLabels();\n\t\t//if (this.props.match.params.board == \"all\") {\n\t\t\t// This is for all posts so the boardLabel will be none\n\t\t//} else if (this.props.match.params.board == \"off-topic\") {\n\t\t\t// This is for off-topic posts. Do stuff here\n\t\t//} else {\n\t\t\t/*labels.forEach((label) => {\n\t\t\t\tif (label.name.startsWith(\"Board:\")) {\n\t\t\t\t\tlabel.name = label.name.slice(6);\n\t\t\t\t\tif (label.name && encodeURI(label.name.replace(\" \", \"-\")) == board) {\n\t\t\t\t\t\tboardLabel = label;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (!boardLabel) {\n\t\t\t\treturn (\n\t\t\t\t\t<div style={base404Style}>\n\t\t\t\t\t\t<img src=\"/images/404.gif\" style={base404ImageStyle}/>\n\t\t\t\t\t\t<h2>This board wasn't found anywhere... perhaps you should <Link to=\"/\">go back home</Link></h2>\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t}\n\t\t}*/\n\t\t//let labels = getPosts(boardLabel);\n\t\tlet posts = this.state.posts;\n\t\tlet status = this.state.status;\n\t\tlet getPosts = this.getPostsInBoard;\n\t\tif (!status) {\n\t\t\treturn \"Getting data\";\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<React.Fragment>\n\t\t\t\t\t<UserInput type=\"post\"\n\t\t\t\t\t\tto={board}\n\t\t\t\t\t\tonsubmit={(title, body) => {postPost(\"Board:\"+board+\" \"+title, body, this.state.repoid); window.setTimeout(this.getPosts, 2000)}\n\t\t\t\t\t}/>\n\t\t\t\t\t{\n\t\t\t\t\t\tObject.keys(posts).map((id) => {\n\t\t\t\t\t\t\tlet post = posts[id];\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<Post\n\t\t\t\t\t\t\t\t\tauthor={post.author}\n\t\t\t\t\t\t\t\t\tauthor_pfp={post.author_pfp}\n\t\t\t\t\t\t\t\t\ttitle={post.title}\n\t\t\t\t\t\t\t\t\tbody={post.content}\n\t\t\t\t\t\t\t\t\ttimestamp={post.timestamp}\n\t\t\t\t\t\t\t\t\tcomments={post.comments}\n\t\t\t\t\t\t\t\t\ttags={post.tags}\n\t\t\t\t\t\t\t\t\tlocked={post.locked}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t</React.Fragment>\n\t\t\t)\n\t\t}\n\t}\n}\nexport default BoardPosts;\n","import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport DisplayBoards from \"./boards/displayBoards.js\";\nimport BoardPosts from \"./posts/boards.js\";\nimport { setToken } from \"./utils/conn.js\";\nimport querySearch from \"stringquery\";\nimport axios from \"axios\";\n//import UserPosts from \"./boards/displayBoards.js\";\n\nlet buildNumber = 0.26;\n\nconsole.log(\n  \"Welcome to the forum. This is client build B.\" +\n    buildNumber +\n    \".\"\n);\n\nclass App extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<Router>\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route exact path=\"/\" render={null}/>\n\t\t\t\t\t<Route path=\"/board/:board\" component={BoardPosts}/>\n\t\t\t\t</Switch>\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route path=\"/login/callback\" component={Authentication}/>\n\t\t\t\t\t<Route component={DisplayBoards}/>\n\t\t\t\t</Switch>\n\t\t\t</Router>\n\t\t);\n\t}\n}\n\nclass Authentication extends Component {\n\trender() {\n\t\tlet ghCode = querySearch(this.props.location.search).code;\n\t\taxios.create({\n\t\t\tbaseURL: 'https://cors-anywhere.herokuapp.com/https://github.com/login/oauth/access_token',\n\t\t}).post('', {\n\t\t\tclient_id: \"9e99d8b63b9a74c6c3a4\",\n\t\t\tclient_secret: \"65209c048eca0255f770c84de322ba0a9d59055f\",\n\t\t\tcode: ghCode\n\t\t}).then((response) => {\n\t\t\tlet res = querySearch(\"?\"+response.data);\n\t\t\tif (res.error) {\n\t\t\t\twindow.location.href = \"https://github.com/login/oauth/authorize?client_id=9e99d8b63b9a74c6c3a4&scope=repo,user\";\n\t\t\t} else {\n\t\t\t\tsetToken(res.access_token);\n\t\t\t\twindow.location.href = \"/\";\n\t\t\t}\n\t\t}).catch((error) => {\n\t\t\twindow.location.href = \"https://github.com/login/oauth/authorize?client_id=9e99d8b63b9a74c6c3a4&scope=repo,user\";\n\t\t});\n\t\treturn null;\n\t}\n}\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}